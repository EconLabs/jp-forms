from sqlmodel import SQLModel, Field
from typing import Optional

class IP810Validator(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)  # Auto-increment primary key
    company_name: str
    address: str
    email: str
    liaison_officer: str
    ssn: str
    tel: str
    fax: str
    legal_form: str
    cfc: str
    business_type: str
    business_function: str
    branches: str
    branches_yes: str
    closing_date: str
    start_year: int
    end_year: int
    total_income_1: float
    total_income_2: float
    services_rendered_1: float
    services_rendered_2: float
    from_persons_1: float
    from_persons_2: float
    industries_businesses_1: float
    industries_businesses_2: float
    sales_1: float
    sales_2: float
    rent_machinery_1: float
    rent_machinery_2: float
    rent_land_1: float
    rent_land_2: float
    interest_1: float
    interest_2: float
    capitan_gain_loss_1: float
    capitan_gain_loss_2: float
    total_expenses_1: float
    total_expenses_2: float
    salaries_1: float
    salaries_2: float
    expenses_interests_1: float
    expenses_interests_2: float
    expenses_rents_1: float
    expenses_rents_2: float
    depreciation_1: float
    depreciation_2: float
    bad_debts_1: float
    bad_debts_2: float
    donations_1: float
    donations_2: float
    other_operating_expenses_1: float
    other_operating_expenses_2: float
    sales_tax_1: float
    sales_tax_2: float
    purchases_1: float
    purchases_2: float
    other_purchases_1: float
    other_purchases_2: float
    licenses_patents_1: float
    licenses_patents_2: float
    net_profit_loss_1: float
    net_profit_loss_2: float
    income_tax_1: float
    income_tax_2: float
    profit_after_tax_1: float
    profit_after_tax_2: float
    withheld_tax_1: float
    withheld_tax_2: float
    name: str
    rank: str
