from sqlmodel import SQLModel, Field
from typing import Optional

class IP610Validator(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True) 
    company_name: str
    address: str
    email: str
    liaison_officer: str
    ssn: str
    tel: str
    fax: str
    legal_form: str
    cfc: str
    business_type: str
    business_function: str
    branches: str
    branches_yes: str
    closing_date: str
    start_year: int
    end_year: int
    incomes_services_rendered_1: float
    incomes_services_rendered_2: float
    incomes_unrestricted_A_1: float
    incomes_unrestricted_A_2: float
    incomes_restricted_A_1: float
    incomes_restricted_A_2: float
    incomes_sales_1: float
    incomes_sales_2: float
    incomes_rents_1: float
    incomes_rents_2: float
    incomes_interests_1: float
    incomes_interests_2: float
    incomes_capital_1: float
    incomes_capital_2: float
    incomes_total_1: float
    incomes_total_2: float
    expenses_1: float
    expenses_2: float
    expenses_salaries_1: float
    expenses_salaries_2: float
    expenses_interests_1: float
    expenses_interests_2: float
    expenses_rents_1: float
    expenses_rents_2: float
    expenses_depreciation_1: float
    expenses_depreciation_2: float
    expenses_debts_1: float
    expenses_debts_2: float
    expenses_donations_1: float
    expenses_donations_2: float
    expenses_tax_1: float
    expenses_tax_2: float
    expenses_machinery_1: float
    expenses_machinery_2: float
    other_purchases_1: float
    other_purchases_2: float
    expenses_licenses_1: float
    expenses_licenses_2: float
    expenses_other_1: float
    expenses_other_2: float
    net_profit_1: float
    net_profit_2: float
    income_tax_1: float
    income_tax_2: float
    profit_after_tax_1: float
    profit_after_tax_2: float
    withheld_tax_1: float
    withheld_tax_2: float
    signature: str
    rank: str
